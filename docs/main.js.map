{
  "version": 3,
  "sources": ["../src/elements/bloco.element.ts", "../src/main.ts"],
  "sourcesContent": ["function fetchTemplate(src: string) {\r\n  const parser = new DOMParser()\r\n\r\n  return new Promise<Document>(async (resolve, reject) => {\r\n    try {\r\n      resolve(\r\n        parser.parseFromString(await (await fetch(src)).text(), 'text/html')\r\n      )\r\n    } catch (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n}\r\n\r\nexport class LetraBlocoElement extends HTMLElement {\r\n  static get observedAttributes() {\r\n    return ['letra', 'tons']\r\n  }\r\n\r\n  template: HTMLTemplateElement\r\n\r\n  letra = ''\r\n\r\n  tons = 'amarelo'\r\n\r\n  connectedCallback() {\r\n    this.attachShadow({ mode: 'open' })\r\n    fetchTemplate('templates/bloco.html').then((doc) => {\r\n      const template = doc.querySelector('template').content\r\n      const style = doc.querySelector('style')\r\n      \r\n      template.querySelector('span').textContent = this.letra\r\n      this.classList.add('tons', this.tons)\r\n\r\n      this.shadowRoot.appendChild(style)\r\n      this.shadowRoot.appendChild(template)\r\n    })\r\n  }\r\n\r\n  attributeChangedCallback(name: string, prev: string, next: string) {\r\n    if (this.template) this.template.textContent = next\r\n    this[name] = next\r\n  }\r\n}\r\ncustomElements.define('letra-bloco', LetraBlocoElement)\r\n", "export * from './elements/bloco.element'\r\n\r\nclass Opcao {\r\n  src: string;\r\n  label: string;\r\n}\r\n\r\nconst get = async (src: string): Promise<Opcao[]> => {\r\n  return fetch(src).then(response => response.json())\r\n}\r\n\r\nfunction preparaOpcao(opcao: Opcao, template: HTMLTemplateElement) {\r\n  const clone = template.content.cloneNode(true) as HTMLElement\r\n\r\n  const caption = clone.querySelector('figcaption')\r\n  const button = clone.querySelector('button')\r\n  const image = clone.querySelector('img')\r\n\r\n  caption.textContent = opcao.label\r\n  button.value = opcao.src\r\n  image.alt = opcao.label\r\n  if (opcao.src) {\r\n\r\n    image.src = opcao.src\r\n  }\r\n  else {\r\n    image.remove()\r\n  }\r\n  return clone\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const template = document.querySelector<HTMLTemplateElement>('#item-da-lista')\r\n  const background = document.querySelector<HTMLImageElement>('#background')\r\n  const ilustracao = document.querySelector<HTMLImageElement>('#ilustracao')\r\n  const cartao = document.querySelector<HTMLDivElement>('#cartao')\r\n  const imprimir = document.querySelector<HTMLDivElement>('#Imprimir')\r\n  console.log(imprimir)\r\n  imprimir.onclick = () => {\r\n    document.body.classList.add('imprimir')\r\n    print()\r\n  }\r\n  const ilustracoes = document.querySelector('#ilustracoes')\r\n  const fundos = document.querySelector('#fundos')\r\n\r\n  get('api/ilustracoes.json').then(opcoes => {\r\n    opcoes.forEach(opcao => ilustracoes.appendChild(\r\n      preparaOpcao(opcao, template)\r\n    ))\r\n\r\n    const buttons = ilustracoes.querySelectorAll('button')\r\n    buttons.forEach((button) => button.onclick = () => {\r\n      ilustracao.querySelector(\"img\").src = button.value\r\n    })\r\n  })\r\n\r\n  get('api/fundos.json').then(opcoes => {\r\n    opcoes.forEach(opcao => fundos.appendChild(\r\n      preparaOpcao(opcao, template)\r\n    ))\r\n\r\n    const buttons = fundos.querySelectorAll('button')\r\n    buttons.forEach((button) => button.onclick = () => {\r\n      if (button.value) {\r\n        background.style.display= \"block\"\r\n        background.src = button.value\r\n      }\r\n      else {\r\n        background.style.display= \"none\"\r\n      }\r\n    })\r\n  })\r\n\r\n})\r\n"],
  "mappings": ";;AAAA,yBAAuB,KAAa;AAClC,UAAM,SAAS,IAAI;AAEnB,WAAO,IAAI,QAAkB,OAAO,SAAS,WAAW;AACtD,UAAI;AACF,gBACE,OAAO,gBAAgB,MAAO,OAAM,MAAM,MAAM,QAAQ;AAAA,eAEnD,KAAP;AACA,eAAO;AAAA;AAAA;AAAA;AAKN,wCAAgC,YAAY;AAAA,IAA5C,cAdP;AAcO;AAOL,mBAAQ;AAER,kBAAO;AAAA;AAAA,eARI,qBAAqB;AAC9B,aAAO,CAAC,SAAS;AAAA;AAAA,IASnB,oBAAoB;AAClB,WAAK,aAAa,CAAE,MAAM;AAC1B,oBAAc,wBAAwB,KAAK,CAAC,QAAQ;AAClD,cAAM,WAAW,IAAI,cAAc,YAAY;AAC/C,cAAM,QAAQ,IAAI,cAAc;AAEhC,iBAAS,cAAc,QAAQ,cAAc,KAAK;AAClD,aAAK,UAAU,IAAI,QAAQ,KAAK;AAEhC,aAAK,WAAW,YAAY;AAC5B,aAAK,WAAW,YAAY;AAAA;AAAA;AAAA,IAIhC,yBAAyB,MAAc,MAAc,MAAc;AACjE,UAAI,KAAK;AAAU,aAAK,SAAS,cAAc;AAC/C,WAAK,QAAQ;AAAA;AAAA;AAGjB,iBAAe,OAAO,eAAe;;;ACrCrC,MAAM,MAAM,OAAO,QAAkC;AACnD,WAAO,MAAM,KAAK,KAAK,cAAY,SAAS;AAAA;AAG9C,wBAAsB,OAAc,UAA+B;AACjE,UAAM,QAAQ,SAAS,QAAQ,UAAU;AAEzC,UAAM,UAAU,MAAM,cAAc;AACpC,UAAM,SAAS,MAAM,cAAc;AACnC,UAAM,QAAQ,MAAM,cAAc;AAElC,YAAQ,cAAc,MAAM;AAC5B,WAAO,QAAQ,MAAM;AACrB,UAAM,MAAM,MAAM;AAClB,QAAI,MAAM,KAAK;AAEb,YAAM,MAAM,MAAM;AAAA,WAEf;AACH,YAAM;AAAA;AAER,WAAO;AAAA;AAGT,WAAS,iBAAiB,oBAAoB,MAAM;AAClD,UAAM,WAAW,SAAS,cAAmC;AAC7D,UAAM,aAAa,SAAS,cAAgC;AAC5D,UAAM,aAAa,SAAS,cAAgC;AAC5D,UAAM,SAAS,SAAS,cAA8B;AACtD,UAAM,WAAW,SAAS,cAA8B;AACxD,YAAQ,IAAI;AACZ,aAAS,UAAU,MAAM;AACvB,eAAS,KAAK,UAAU,IAAI;AAC5B;AAAA;AAEF,UAAM,cAAc,SAAS,cAAc;AAC3C,UAAM,SAAS,SAAS,cAAc;AAEtC,QAAI,wBAAwB,KAAK,YAAU;AACzC,aAAO,QAAQ,WAAS,YAAY,YAClC,aAAa,OAAO;AAGtB,YAAM,UAAU,YAAY,iBAAiB;AAC7C,cAAQ,QAAQ,CAAC,WAAW,OAAO,UAAU,MAAM;AACjD,mBAAW,cAAc,OAAO,MAAM,OAAO;AAAA;AAAA;AAIjD,QAAI,mBAAmB,KAAK,YAAU;AACpC,aAAO,QAAQ,WAAS,OAAO,YAC7B,aAAa,OAAO;AAGtB,YAAM,UAAU,OAAO,iBAAiB;AACxC,cAAQ,QAAQ,CAAC,WAAW,OAAO,UAAU,MAAM;AACjD,YAAI,OAAO,OAAO;AAChB,qBAAW,MAAM,UAAS;AAC1B,qBAAW,MAAM,OAAO;AAAA,eAErB;AACH,qBAAW,MAAM,UAAS;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
